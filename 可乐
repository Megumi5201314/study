题目描述 
小美和小团最近沉迷可乐。可供TA们选择的可乐共有k种，比如可口可乐、零度可乐等等，每种可乐会带给小美和小团不同的快乐程度。
TA们一共要买n瓶可乐，每种可乐可以买无限多瓶，小美会随机挑选其中的m瓶喝，剩下的n-m瓶小团喝。
请问应该如何购买可乐，使得小美和小团得到的快乐程度的和的期望值最大？
现在请求出购买可乐的方案。
输入描述:
第一行三个整数n，m，k分别表示要买的可乐数、小美喝的可乐数以及可供选择的可乐种数。
接下来k行，每行两个整数a，b分别表示某种可乐分别给予小美和小团的快乐程度。
对于所有数据，1 <= n <= 10,000, 0 <= m <= n, 1 <= k <= 10,000, -10,000 <= a, b <= 10,000
输出描述:
一行k个整数，第i个整数表示购买第i种可乐的数目。
如果有多解，请输出字典序最小的那个。
对于两个序列 a1, a2, ..., ak, b1, b2, ..., bk，a的字典序小于b，当且仅当存在一个位置i <= k满足：
ai < bi且对于所有的位置 j < i，aj = bj；

#include <bits/stdc++.h>
using namespace std ;
int n , m , k ;
int p , maxx ;
signed main () {
    scanf ( "%d%d%d" , &n , &m , &k ) ;
    int a , b ;
    scanf ( "%d%d" , &a , &b ) ;
    maxx = a * m + b * ( n - m ) ; p = 1 ;
    for ( int i = 2 ; i <= k ; i ++ ) {
        scanf ( "%d%d" , &a , &b ) ;
        if ( a * m + b * ( n - m ) >= maxx ) maxx = a * m + b * ( n - m ) , p = i ;
    }
    if ( p == 1 ) printf ( "%d" , n ) ;
    else printf ( "0" ) ;
    for ( int i = 2 ; i <= k ; i ++ ) {
        if ( i == p ) printf ( " %d" , n ) ;
        else printf ( " 0" ) ;
    }
    printf ( "\n" ) ;
}
